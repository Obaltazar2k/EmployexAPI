# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.media import Media  # noqa: F401,E501
from swagger_server import util


class Section(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, section_id: str=None, title: str=None, description: str=None, media: List[Media]=None):  # noqa: E501
        """Section - a model defined in Swagger

        :param section_id: The section_id of this Section.  # noqa: E501
        :type section_id: str
        :param title: The title of this Section.  # noqa: E501
        :type title: str
        :param description: The description of this Section.  # noqa: E501
        :type description: str
        :param media: The media of this Section.  # noqa: E501
        :type media: List[Media]
        """
        self.swagger_types = {
            'section_id': str,
            'title': str,
            'description': str,
            'media': List[Media]
        }

        self.attribute_map = {
            'section_id': 'section_id',
            'title': 'title',
            'description': 'description',
            'media': 'media'
        }
        self._section_id = section_id
        self._title = title
        self._description = description
        self._media = media

    @classmethod
    def from_dict(cls, dikt) -> 'Section':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Section of this Section.  # noqa: E501
        :rtype: Section
        """
        return util.deserialize_model(dikt, cls)

    @property
    def section_id(self) -> str:
        """Gets the section_id of this Section.

        Unique identifier of the section  # noqa: E501

        :return: The section_id of this Section.
        :rtype: str
        """
        return self._section_id

    @section_id.setter
    def section_id(self, section_id: str):
        """Sets the section_id of this Section.

        Unique identifier of the section  # noqa: E501

        :param section_id: The section_id of this Section.
        :type section_id: str
        """

        self._section_id = section_id

    @property
    def title(self) -> str:
        """Gets the title of this Section.

        Title of the section  # noqa: E501

        :return: The title of this Section.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Section.

        Title of the section  # noqa: E501

        :param title: The title of this Section.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Section.

        Main text of the section  # noqa: E501

        :return: The description of this Section.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Section.

        Main text of the section  # noqa: E501

        :param description: The description of this Section.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def media(self) -> List[Media]:
        """Gets the media of this Section.

        Multimedia data related to the section  # noqa: E501

        :return: The media of this Section.
        :rtype: List[Media]
        """
        return self._media

    @media.setter
    def media(self, media: List[Media]):
        """Sets the media of this Section.

        Multimedia data related to the section  # noqa: E501

        :param media: The media of this Section.
        :type media: List[Media]
        """

        self._media = media
