# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.job_category import JobCategory  # noqa: F401,E501
from swagger_server.models.sector import Sector  # noqa: F401,E501
from swagger_server import util


class LaboralExperience(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, laboral_experience_id: str=None, job_title: str=None, current_job: bool=False, end_date: date=None, start_date: date=None, company_name: str=None, sector: Sector=None, job_category: JobCategory=None, location: str=None):  # noqa: E501
        """LaboralExperience - a model defined in Swagger

        :param laboral_experience_id: The laboral_experience_id of this LaboralExperience.  # noqa: E501
        :type laboral_experience_id: str
        :param job_title: The job_title of this LaboralExperience.  # noqa: E501
        :type job_title: str
        :param current_job: The current_job of this LaboralExperience.  # noqa: E501
        :type current_job: bool
        :param end_date: The end_date of this LaboralExperience.  # noqa: E501
        :type end_date: date
        :param start_date: The start_date of this LaboralExperience.  # noqa: E501
        :type start_date: date
        :param company_name: The company_name of this LaboralExperience.  # noqa: E501
        :type company_name: str
        :param sector: The sector of this LaboralExperience.  # noqa: E501
        :type sector: Sector
        :param job_category: The job_category of this LaboralExperience.  # noqa: E501
        :type job_category: JobCategory
        :param location: The location of this LaboralExperience.  # noqa: E501
        :type location: str
        """
        self.swagger_types = {
            'laboral_experience_id': str,
            'job_title': str,
            'current_job': bool,
            'end_date': date,
            'start_date': date,
            'company_name': str,
            'sector': Sector,
            'job_category': JobCategory,
            'location': str
        }

        self.attribute_map = {
            'laboral_experience_id': 'laboralExperienceId',
            'job_title': 'jobTitle',
            'current_job': 'currentJob',
            'end_date': 'endDate',
            'start_date': 'startDate',
            'company_name': 'companyName',
            'sector': 'sector',
            'job_category': 'JobCategory',
            'location': 'location'
        }
        self._laboral_experience_id = laboral_experience_id
        self._job_title = job_title
        self._current_job = current_job
        self._end_date = end_date
        self._start_date = start_date
        self._company_name = company_name
        self._sector = sector
        self._job_category = job_category
        self._location = location

    @classmethod
    def from_dict(cls, dikt) -> 'LaboralExperience':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LaboralExperience of this LaboralExperience.  # noqa: E501
        :rtype: LaboralExperience
        """
        return util.deserialize_model(dikt, cls)

    @property
    def laboral_experience_id(self) -> str:
        """Gets the laboral_experience_id of this LaboralExperience.

        Unique identifier of the laboral experience  # noqa: E501

        :return: The laboral_experience_id of this LaboralExperience.
        :rtype: str
        """
        return self._laboral_experience_id

    @laboral_experience_id.setter
    def laboral_experience_id(self, laboral_experience_id: str):
        """Sets the laboral_experience_id of this LaboralExperience.

        Unique identifier of the laboral experience  # noqa: E501

        :param laboral_experience_id: The laboral_experience_id of this LaboralExperience.
        :type laboral_experience_id: str
        """

        self._laboral_experience_id = laboral_experience_id

    @property
    def job_title(self) -> str:
        """Gets the job_title of this LaboralExperience.

        Job's title  # noqa: E501

        :return: The job_title of this LaboralExperience.
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title: str):
        """Sets the job_title of this LaboralExperience.

        Job's title  # noqa: E501

        :param job_title: The job_title of this LaboralExperience.
        :type job_title: str
        """
        if job_title is None:
            raise ValueError("Invalid value for `job_title`, must not be `None`")  # noqa: E501

        self._job_title = job_title

    @property
    def current_job(self) -> bool:
        """Gets the current_job of this LaboralExperience.

        A flag to know if this laboral experience is the current job of the user  # noqa: E501

        :return: The current_job of this LaboralExperience.
        :rtype: bool
        """
        return self._current_job

    @current_job.setter
    def current_job(self, current_job: bool):
        """Sets the current_job of this LaboralExperience.

        A flag to know if this laboral experience is the current job of the user  # noqa: E501

        :param current_job: The current_job of this LaboralExperience.
        :type current_job: bool
        """
        if current_job is None:
            raise ValueError("Invalid value for `current_job`, must not be `None`")  # noqa: E501

        self._current_job = current_job

    @property
    def end_date(self) -> date:
        """Gets the end_date of this LaboralExperience.

        Date where the laboral experience finished  # noqa: E501

        :return: The end_date of this LaboralExperience.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: date):
        """Sets the end_date of this LaboralExperience.

        Date where the laboral experience finished  # noqa: E501

        :param end_date: The end_date of this LaboralExperience.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def start_date(self) -> date:
        """Gets the start_date of this LaboralExperience.

        Date where the laboral experience started  # noqa: E501

        :return: The start_date of this LaboralExperience.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: date):
        """Sets the start_date of this LaboralExperience.

        Date where the laboral experience started  # noqa: E501

        :param start_date: The start_date of this LaboralExperience.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def company_name(self) -> str:
        """Gets the company_name of this LaboralExperience.

        Organization's name  # noqa: E501

        :return: The company_name of this LaboralExperience.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this LaboralExperience.

        Organization's name  # noqa: E501

        :param company_name: The company_name of this LaboralExperience.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def sector(self) -> Sector:
        """Gets the sector of this LaboralExperience.


        :return: The sector of this LaboralExperience.
        :rtype: Sector
        """
        return self._sector

    @sector.setter
    def sector(self, sector: Sector):
        """Sets the sector of this LaboralExperience.


        :param sector: The sector of this LaboralExperience.
        :type sector: Sector
        """

        self._sector = sector

    @property
    def job_category(self) -> JobCategory:
        """Gets the job_category of this LaboralExperience.


        :return: The job_category of this LaboralExperience.
        :rtype: JobCategory
        """
        return self._job_category

    @job_category.setter
    def job_category(self, job_category: JobCategory):
        """Sets the job_category of this LaboralExperience.


        :param job_category: The job_category of this LaboralExperience.
        :type job_category: JobCategory
        """

        self._job_category = job_category

    @property
    def location(self) -> str:
        """Gets the location of this LaboralExperience.

        Location where the work experience was lived  # noqa: E501

        :return: The location of this LaboralExperience.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this LaboralExperience.

        Location where the work experience was lived  # noqa: E501

        :param location: The location of this LaboralExperience.
        :type location: str
        """

        self._location = location
