# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Aplication(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: date=None, aproved: bool=False, independient_user_id: str=None, job_offer_id: str=None):  # noqa: E501
        """Aplication - a model defined in Swagger

        :param _date: The _date of this Aplication.  # noqa: E501
        :type _date: date
        :param aproved: The aproved of this Aplication.  # noqa: E501
        :type aproved: bool
        :param independient_user_id: The independient_user_id of this Aplication.  # noqa: E501
        :type independient_user_id: str
        :param job_offer_id: The job_offer_id of this Aplication.  # noqa: E501
        :type job_offer_id: str
        """
        self.swagger_types = {
            '_date': date,
            'aproved': bool,
            'independient_user_id': str,
            'job_offer_id': str
        }

        self.attribute_map = {
            '_date': 'date',
            'aproved': 'aproved',
            'independient_user_id': 'independientUserId',
            'job_offer_id': 'jobOfferId'
        }
        self.__date = _date
        self._aproved = aproved
        self._independient_user_id = independient_user_id
        self._job_offer_id = job_offer_id

    @classmethod
    def from_dict(cls, dikt) -> 'Aplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Aplication of this Aplication.  # noqa: E501
        :rtype: Aplication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> date:
        """Gets the _date of this Aplication.

        Date on which was applied for the job  # noqa: E501

        :return: The _date of this Aplication.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this Aplication.

        Date on which was applied for the job  # noqa: E501

        :param _date: The _date of this Aplication.
        :type _date: date
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")  # noqa: E501

        self.__date = _date

    @property
    def aproved(self) -> bool:
        """Gets the aproved of this Aplication.

        Flah to know if the aplication was aproved or not  # noqa: E501

        :return: The aproved of this Aplication.
        :rtype: bool
        """
        return self._aproved

    @aproved.setter
    def aproved(self, aproved: bool):
        """Sets the aproved of this Aplication.

        Flah to know if the aplication was aproved or not  # noqa: E501

        :param aproved: The aproved of this Aplication.
        :type aproved: bool
        """
        if aproved is None:
            raise ValueError("Invalid value for `aproved`, must not be `None`")  # noqa: E501

        self._aproved = aproved

    @property
    def independient_user_id(self) -> str:
        """Gets the independient_user_id of this Aplication.

        From who is the aplication  # noqa: E501

        :return: The independient_user_id of this Aplication.
        :rtype: str
        """
        return self._independient_user_id

    @independient_user_id.setter
    def independient_user_id(self, independient_user_id: str):
        """Sets the independient_user_id of this Aplication.

        From who is the aplication  # noqa: E501

        :param independient_user_id: The independient_user_id of this Aplication.
        :type independient_user_id: str
        """

        self._independient_user_id = independient_user_id

    @property
    def job_offer_id(self) -> str:
        """Gets the job_offer_id of this Aplication.

        Job offer's id  # noqa: E501

        :return: The job_offer_id of this Aplication.
        :rtype: str
        """
        return self._job_offer_id

    @job_offer_id.setter
    def job_offer_id(self, job_offer_id: str):
        """Sets the job_offer_id of this Aplication.

        Job offer's id  # noqa: E501

        :param job_offer_id: The job_offer_id of this Aplication.
        :type job_offer_id: str
        """

        self._job_offer_id = job_offer_id
